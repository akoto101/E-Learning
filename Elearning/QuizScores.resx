<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="materialRaisedButton2.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>